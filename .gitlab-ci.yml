default:
  tags:
    - shell

stages:
  - lint
  - build-base
  - build-children

backend-dokter:
  image: registry.gitlab.com/gitlab-org/incubation-engineering/ai-assist/dokter/dokter:latest
  stage: lint
  script:
    - dokter -d backend/Dockerfile --gitlab-codequality
  artifacts:
    name: "$CI_JOB_NAME artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
    expire_in: 1 day
    when: always
    reports:
      codequality:
        - "dokter-backend-$CI_COMMIT_SHA.json"
    paths:
      - "dokter-$CI_COMMIT_SHA.json"

ml_api-dokter:
  image: registry.gitlab.com/gitlab-org/incubation-engineering/ai-assist/dokter/dokter:latest
  stage: lint
  script:
    - dokter -d ml_api/Dockerfile --gitlab-codequality
  artifacts:
    name: "$CI_JOB_NAME artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
    expire_in: 1 day
    when: always
    reports:
      codequality:
        - "dokter-ml_api-$CI_COMMIT_SHA.json"
    paths:
      - "dokter-$CI_COMMIT_SHA.json"


build_api_base:
  stage: build-base
  needs: []
  script:
    - cd ml_api
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker buildx build -t $CI_REGISTRY/docker/obico-server/api-base:latest -f Dockerfile.base_x86_64 .
    - docker push $CI_REGISTRY/docker/obico-server/api-base:latest

build_api_child:
  stage: build-children
  needs:
    - job: build_api_base
  script:
    - cd ml_api
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker buildx build -t $CI_REGISTRY/docker/obico-server/api:latest -f Dockerfile .
    - docker push $CI_REGISTRY/docker/obico-server/api:latest

build_backend_child:
  stage: build-children
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker buildx build -t $CI_REGISTRY/docker/obico-server/backend:latest -f backend/Dockerfile .
    - docker push $CI_REGISTRY/docker/obico-server/backend:latest
