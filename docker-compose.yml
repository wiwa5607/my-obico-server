version: '2.4'

x-web-defaults:
  &web-defaults
  restart: unless-stopped
  image: glregistry.wizzlehq.org/docker/obico-server/backend:latest
  volumes:
    - ./backend:/app
    - ./frontend:/frontend
  depends_on:
    - redis
  environment:
    EMAIL_HOST: 'smtp.sendgrid.net'
    EMAIL_DOMAIN: 'smtp.sendgrid.net'
    EMAIL_HOST_USER: 'apikey'
    EMAIL_PORT: '587'
    EMAIL_USE_TLS: 'False'
    DEFAULT_FROM_EMAIL: '${DEFAULT_FROM_EMAIL-willwalker1226@gmail.com}'
    DEBUG: 'False' # Don't set DEBUG to True unless you know what you are doing. Otherwise the static files will be cached in browser until hard-refresh
    SITE_USES_HTTPS: 'True'
    SOCIAL_LOGIN: 'False'
    REDIS_URL: 'redis://obico-server-redis-1:6379'
    DATABASE_URL: '${DATABASE_URL-sqlite:////app/db.sqlite3}'
    INTERNAL_MEDIA_HOST: '${INTERNAL_MEDIA_HOST-http://obico-web:3334}'
    ML_API_HOST: '${ML_API_HOST-http://ml_api:3333}'
    ACCOUNT_ALLOW_SIGN_UP: '${ACCOUNT_ALLOW_SIGN_UP-True}'
    WEBPACK_LOADER_ENABLED: '${WEBPACK_LOADER_ENABLED-False}'
    OCTOPRINT_TUNNEL_PORT_RANGE: '${OCTOPRINT_TUNNEL_PORT_RANGE-15853-15873}'

services:
  ml_api:
    hostname: ml_api
    restart: unless-stopped
    image: glregistry.wizzlehq.org/docker/obico-server/api:latest
    environment:
      DEBUG: 'True'
      FLASK_APP: 'server.py'
      #ML_API_TOKEN:
      HAS_GPU: 'False'

  obico-web:
    <<: *web-defaults
    hostname: obico-web
    labels:
      - "traefik.enable=true"
      - traefik.http.routers.obico-web.tls=true
      - "traefik.http.services.obico-web.loadbalancer.server.port=3334"
      - "traefik.http.routers.obico-web.entrypoints=websecure"
      - traefik.http.routers.obico-web.service=obico-web
      - traefik.http.routers.obico-web.rule=Host("spaghetti.wizzlehq.org")
      - traefik.http.routers.obico-web.tls.certresolver=myresolver
    networks:
      - proxynet
    ports:
      - "3334:3334"
    depends_on:
    - ml_api
    deploy:
      resources:
        limits:
          memory: 1G

  tasks:
    <<: *web-defaults
    hostname: tasks
    command: /app/run_celery.sh

  redis:
    restart: unless-stopped
    image: redis:5.0-alpine

networks:
  proxynet:
    name: proxy_net
    external: true
